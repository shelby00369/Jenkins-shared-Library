Joining worker nodes ðŸšœ 
Deleted nodes: ["first-cluster-worker3" "first-cluster-worker" "first-cluster-worker2" "first-cluster-control-plane"]
ERROR: failed to create cluster: failed to join node with kubeadm: command "docker exec --privileged first-cluster-worker kubeadm join --config /kind/kubeadm.conf --v=6" failed with error: exit status 1
Command Output: I0605 07:23:20.619843     143 join.go:419] [preflight] found NodeName empty; using OS hostname as NodeName
I0605 07:23:20.637605     143 joinconfiguration.go:83] loading configuration from "/kind/kubeadm.conf"
W0605 07:23:20.664495     143 common.go:101] your configuration file uses a deprecated API spec: "kubeadm.k8s.io/v1beta3" (kind: "JoinConfiguration"). Please use 'kubeadm config migrate --old-config old.yaml --new-config new.yaml', which will write the new, similar spec using a newer API version.
I0605 07:23:20.672655     143 controlplaneprepare.go:225] [download-certs] Skipping certs download
I0605 07:23:20.686198     143 join.go:538] [preflight] Discovering cluster-info
I0605 07:23:20.691811     143 token.go:79] [discovery] Created cluster-info discovery client, requesting info from "first-cluster-control-plane:6443"
I0605 07:23:20.810870     143 token.go:210] [discovery] Waiting for the cluster-info ConfigMap to receive a JWS signaturefor token ID "abcdef"
I0605 07:23:30.898906     143 round_trippers.go:553] GET https://first-cluster-control-plane:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s  in 10042 milliseconds
I0605 07:23:30.986517     143 token.go:221] [discovery] Retrying due to error: failed to request the cluster-info ConfigMap: Get "https://first-cluster-control-plane:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0605 07:23:37.087414     143 round_trippers.go:553] GET https://first-cluster-control-plane:6443/api/v1/namespaces/kube-public/configmaps/cluster-info?timeout=10s 200 OK in 6027 milliseconds
I0605 07:23:37.354433     143 token.go:104] [discovery] Cluster info signature and contents are valid and no TLS pinning was specified, will use API Server "first-cluster-control-plane:6443"
I0605 07:23:37.354480     143 discovery.go:52] [discovery] Using provided TLSBootstrapToken as authentication credentials for the join process
I0605 07:23:37.354498     143 join.go:552] [preflight] Fetching init configuration
I0605 07:23:37.354501     143 join.go:598] [preflight] Retrieving KubeConfig objects
[preflight] Reading configuration from the cluster...
[preflight] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -o yaml'
I0605 07:23:38.778936     143 round_trippers.go:553] GET https://first-cluster-control-plane:6443/api/v1/namespaces/kube-system/configmaps/kubeadm-config?timeout=10s 200 OK in 1418 milliseconds
I0605 07:23:38.870960     143 kubeproxy.go:55] attempting to download the KubeProxyConfiguration from ConfigMap "kube-proxy"
I0605 07:23:39.210667     143 round_trippers.go:553] GET https://first-cluster-control-plane:6443/api/v1/namespaces/kube-system/configmaps/kube-proxy?timeout=10s 200 OK in 339 milliseconds
I0605 07:23:39.267484     143 kubelet.go:73] attempting to download the KubeletConfiguration from ConfigMap "kubelet-config"
I0605 07:23:39.514148     143 round_trippers.go:553] GET https://first-cluster-control-plane:6443/api/v1/namespaces/kube-system/configmaps/kubelet-config?timeout=10s 200 OK in 246 milliseconds
I0605 07:23:39.625239     143 initconfiguration.go:115] skip CRI socket detection, fill with the default CRI socket unix:///var/run/containerd/containerd.sock
I0605 07:23:39.634067     143 interface.go:432] Looking for default routes with IPv4 addresses
I0605 07:23:39.635103     143 interface.go:437] Default route transits interface "eth0"
I0605 07:23:39.635191     143 interface.go:209] Interface eth0 is up
I0605 07:23:39.635242     143 interface.go:257] Interface "eth0" has 3 addresses :[172.18.0.4/16 fc00:f853:ccd:e793::4/64 fe80::42:acff:fe12:4/64].
I0605 07:23:39.635259     143 interface.go:224] Checking addr  172.18.0.4/16.
I0605 07:23:39.635266     143 interface.go:231] IP found 172.18.0.4
I0605 07:23:39.635283     143 interface.go:263] Found valid IPv4 address 172.18.0.4 for interface "eth0".
I0605 07:23:39.635288     143 interface.go:443] Found active IP 172.18.0.4 
I0605 07:23:39.635587     143 kubelet.go:175] [kubelet-start] writing bootstrap kubelet config file at /etc/kubernetes/bootstrap-kubelet.conf
I0605 07:23:39.662788     143 kubelet.go:190] [kubelet-start] writing CA certificate at /etc/kubernetes/pki/ca.crt
I0605 07:23:39.662902     143 kubelet.go:206] [kubelet-start] Checking for an existing Node in the cluster with name "first-cluster-worker" and status "Ready"
I0605 07:23:40.231824     143 round_trippers.go:553] GET https://first-cluster-control-plane:6443/api/v1/nodes/first-cluster-worker?timeout=10s 404 Not Found in 568 milliseconds
I0605 07:23:40.232210     143 kubelet.go:221] [kubelet-start] Stopping the kubelet
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Starting the kubelet
[kubelet-check] Waiting for a healthy kubelet at http://127.0.0.1:10248/healthz. This can take up to 4m0s
[kubelet-check] The kubelet is healthy after 4.803933597s
[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap
I0605 07:23:49.025499     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:23:49.968271     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:23:50.967614     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:23:51.969471     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:23:52.972734     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:23:53.974851     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:23:54.978958     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:23:55.974883     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:23:56.977596     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:23:57.969592     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:23:58.968743     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:23:59.973580     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
I0605 07:24:00.969677     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
Unfortunately, an error has occurred:
	context deadline exceeded

This error is likely caused by:
	- The kubelet is not running
	- The kubelet is unhealthy due to a misconfiguration of the node in some way (required cgroups disabled)

If you are on a systemd-powered system, you can try to troubleshoot the error with the following commands:
	- 'systemctl status kubelet'
	- 'journalctl -xeu kubelet'
I0605 07:28:48.967562     143 loader.go:395] Config loaded from file:  /etc/kubernetes/kubelet.conf
context deadline exceeded
error execution phase kubelet-start
k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).Run.func1
	k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:260
k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).visitAll
	k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:446
k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow.(*Runner).Run
	k8s.io/kubernetes/cmd/kubeadm/app/cmd/phases/workflow/runner.go:232
k8s.io/kubernetes/cmd/kubeadm/app/cmd.newCmdJoin.func1
	k8s.io/kubernetes/cmd/kubeadm/app/cmd/join.go:183
github.com/spf13/cobra.(*Command).execute
	github.com/spf13/cobra@v1.8.1/command.go:985
github.com/spf13/cobra.(*Command).ExecuteC
	github.com/spf13/cobra@v1.8.1/command.go:1117
github.com/spf13/cobra.(*Command).Execute
	github.com/spf13/cobra@v1.8.1/command.go:1041
k8s.io/kubernetes/cmd/kubeadm/app.Run
	k8s.io/kubernetes/cmd/kubeadm/app/kubeadm.go:47
main.main
	k8s.io/kubernetes/cmd/kubeadm/kubeadm.go:25
runtime.main
	runtime/proc.go:271
runtime.goexit
	runtime/asm_amd64.s:1695

